[
 {
  "add_total_row": 0,
  "columns": [],
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Report",
  "filters": [],
  "is_standard": "No",
  "javascript": null,
  "json": null,
  "letter_head": "",
  "modified": "2024-11-19 12:11:34.541236",
  "module": "Nextfood",
  "name": "Fat Kg And Snf Kg Profit Loss",
  "prepared_report": 0,
  "query": "select \nse.custom_purchase_receipt as 'Purchase Receipt',\nsed.item_code as 'Item Code',\nsed.qty as 'Qty',\nsed.custom_purchase_fat as 'Purchase Fat ',\nsed.custom_purchase_clr as 'Purchase CLR',\nsed.custom_purchase_fat_kg as 'Purchase Fat KG',\nsed.custom_purchase_snf_kg as 'Purchase SNF KG',\nse.name as 'Stock Entry No',\nsed.custom_fat as 'Transfer Fat ',\nsed.custom_clr as 'Transfer CLR',\nsed.custom_fat_kg as 'Transfer Fat KG',\nsed.custom_snf_kg as 'Transfer SNF KG',\nsed.custom_purchase_fat_kg - sed.custom_fat_kg as ' Diff Fat KG',\nsed.custom_purchase_snf_kg - sed.custom_snf_kg as ' Diff SNF KG'\nfrom `tabStock Entry` se join `tabStock Entry Detail` sed \non sed.parent = se.name\nwhere\nse.stock_entry_type = \"Material Transfer\"\nAND\nse.custom_fat_is_different = 1",
  "ref_doctype": "Stock Entry",
  "reference_report": null,
  "report_name": "Fat Kg And Snf Kg Profit Loss",
  "report_script": null,
  "report_type": "Query Report",
  "roles": [
   {
    "parent": "Fat Kg And Snf Kg Profit Loss",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Stock User"
   },
   {
    "parent": "Fat Kg And Snf Kg Profit Loss",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Manufacturing User"
   },
   {
    "parent": "Fat Kg And Snf Kg Profit Loss",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Manufacturing Manager"
   },
   {
    "parent": "Fat Kg And Snf Kg Profit Loss",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Stock Manager"
   }
  ],
  "timeout": 0
 },
 {
  "add_total_row": 0,
  "columns": [],
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Report",
  "filters": [],
  "is_standard": "Yes",
  "javascript": null,
  "json": null,
  "letter_head": null,
  "modified": "2024-11-26 15:28:15.164703",
  "module": "Nextfood",
  "name": "Stock Balance Report",
  "prepared_report": 0,
  "query": null,
  "ref_doctype": "Stock Ledger Entry",
  "reference_report": null,
  "report_name": "Stock Balance Report",
  "report_script": null,
  "report_type": "Script Report",
  "roles": [
   {
    "parent": "Stock Balance Report",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Stock User"
   },
   {
    "parent": "Stock Balance Report",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Accounts Manager"
   }
  ],
  "timeout": 0
 },
 {
  "add_total_row": 1,
  "columns": [],
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Report",
  "filters": [
   {
    "default": null,
    "fieldname": "from_date",
    "fieldtype": "Date",
    "label": "From Date",
    "mandatory": 1,
    "options": null,
    "parent": "Customer wise Crates Report",
    "parentfield": "filters",
    "parenttype": "Report",
    "wildcard_filter": 0
   },
   {
    "default": null,
    "fieldname": "to_date",
    "fieldtype": "Date",
    "label": "To Date",
    "mandatory": 1,
    "options": null,
    "parent": "Customer wise Crates Report",
    "parentfield": "filters",
    "parenttype": "Report",
    "wildcard_filter": 0
   }
  ],
  "is_standard": "No",
  "javascript": null,
  "json": null,
  "letter_head": null,
  "modified": "2024-12-11 10:15:35.220955",
  "module": "Nextfood",
  "name": "Customer wise Crates Report",
  "prepared_report": 0,
  "query": "SELECT \n    dm.customer AS 'Customer Name',\n    dnt.item_code AS 'Item Code',\n    SUM(dnt.qty) AS 'Out Qty',\n    SUM(sed.qty) AS 'IN Qty',\n    dnt.actual_qty AS \"Balance Qty\"\nFROM \n    `tabDelivery Note` dm\nJOIN \n    `tabDelivery Note Item` dnt \nON \n    dm.name = dnt.parent\nJOIN \n    `tabStock Entry` se \nON \n    se.custom_delivery_note = dm.name\nJOIN \n    `tabStock Entry Detail` sed \nON \n    se.name = sed.parent\nWHERE \n    dnt.custom_is_companny_provided_item = 1\n   AND\n (\n       DATE(dm.posting_date) between %(from_date) s\n       and %(to_date) s\n   )\n   and \n   dnt.item_code = sed.item_code\nGROUP BY \n    dm.customer, dnt.item_code;\n",
  "ref_doctype": "Delivery Note",
  "reference_report": null,
  "report_name": "Customer wise Crates Report",
  "report_script": null,
  "report_type": "Query Report",
  "roles": [
   {
    "parent": "Customer wise Crates Report",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Stock User"
   },
   {
    "parent": "Customer wise Crates Report",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Stock Manager"
   },
   {
    "parent": "Customer wise Crates Report",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Sales User"
   },
   {
    "parent": "Customer wise Crates Report",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Accounts User"
   },
   {
    "parent": "Customer wise Crates Report",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Delivery User"
   },
   {
    "parent": "Customer wise Crates Report",
    "parentfield": "roles",
    "parenttype": "Report",
    "role": "Delivery Manager"
   }
  ],
  "timeout": 0
 }
]